// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace SftpXmlTask.DataAccess.XmlDataAccessImplementation.Models;

public partial class DatabaseContext : DbContext
{
    public DatabaseContext(DbContextOptions<DatabaseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<PurchaseOrder> PurchaseOrders { get; set; }

    public virtual DbSet<PurchaseOrderCustomer> PurchaseOrderCustomers { get; set; }

    public virtual DbSet<PurchaseOrderItem> PurchaseOrderItems { get; set; }

    public virtual DbSet<VPurchaseOrderInformation> VPurchaseOrderInformations { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<PurchaseOrder>(entity =>
        {
            entity.HasKey(e => e.PurchaseOrderId).HasName("PK_PurchaseOrderId");

            entity.ToTable("PurchaseOrder", "Customer");

            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasDefaultValueSql("(user_name())");
            entity.Property(e => e.LastUpd)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.LastUpdApp)
                .HasMaxLength(512)
                .HasDefaultValueSql("(app_name())");
            entity.Property(e => e.LastUpdBy)
                .HasMaxLength(50)
                .HasDefaultValueSql("(user_name())");
            entity.Property(e => e.PurchaseOrderDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<PurchaseOrderCustomer>(entity =>
        {
            entity.HasKey(e => e.PurchaseOrderCustomerId).HasName("PK_PurchaseOrderCustomerId");

            entity.ToTable("PurchaseOrderCustomer", "Customer");

            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasDefaultValueSql("(user_name())");
            entity.Property(e => e.FirstName)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.LastUpd)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.LastUpdApp)
                .HasMaxLength(512)
                .HasDefaultValueSql("(app_name())");
            entity.Property(e => e.LastUpdBy)
                .HasMaxLength(50)
                .HasDefaultValueSql("(user_name())");
            entity.Property(e => e.Oib)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("OIB");
        });

        modelBuilder.Entity<PurchaseOrderItem>(entity =>
        {
            entity.HasKey(e => e.PurchaseOrderItemId).HasName("PK_PurchaseOrderItemId");

            entity.ToTable("PurchaseOrderItem", "Customer");

            entity.Property(e => e.Created)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasDefaultValueSql("(user_name())");
            entity.Property(e => e.LastUpd)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.LastUpdApp)
                .HasMaxLength(512)
                .HasDefaultValueSql("(app_name())");
            entity.Property(e => e.LastUpdBy)
                .HasMaxLength(50)
                .HasDefaultValueSql("(user_name())");
            entity.Property(e => e.Price).HasColumnType("money");
            entity.Property(e => e.ProductName)
                .HasMaxLength(25)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VPurchaseOrderInformation>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vPurchaseOrderInformation", "Customer");

            entity.Property(e => e.FirstName)
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false);
            entity.Property(e => e.Oib)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("OIB");
            entity.Property(e => e.PurchaseOrderDate).HasColumnType("datetime");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}